# COMMAND LINE CRASH COURSE (DAY 3)

all filepaths start with /

'bin' directory
- system files are NOT user files

bin, etc, lib, tmp are all system files/directories

usr
- will have own bin, lib etc. files

home directory (~)
- /users/ is home directory

each command needs up to 3 things:
- name of command (e.g. ls)
- arguments (e.g. directory)
- options, preceded with a dash, then one letter per option
note: -- (double dash) is just a long form for the option

# getting help

# step 1 - man ('q' to escape)
man <command>
e.g.
man ls

man -k copy # lists possible commands related to copying

# step 2 - apropos
apropos copy # lists possible commands related to copying

# step 3 - info
info <command>

# step 4 - --help
python --help

# other commands

less <file> # better than cat for printing out larger files

tail <file> -100f # last 100 lines (must ctrl + C to get out)

# look at total disk space on your machine
df -h

# check amount of space a dir is taking up (du = 'disk usage')
du -h -d 1 <dir>/* # depth of 1 (-d 1)
#e.g.
du -h -d 1 /bin/*

# searching for files
find <path to search> <>

# search text for pattern with grep
grep data README.md

wc -l <file> # counts number of lines

# zipping and unzipping
gzip testdir
gunzip test.gz

# echo prints a string to the console
echo <string>

standard input: prompt in terminal
standard output: prints result to terminal

echo string > filename.ext # overwrites
echo string >> filename.ext # appends

## ENVIRONMENT VARIABLES

env # shows environment variables

`.bash_profile` file will run everytime you start terminal

## PERMISSION AND ACCESS

Access classes:
each file is assigned to a user (u) and a group (g), systemwide (a or o)

e.g.
drwxrr-xr-x
rwx - read write execute (user)
r-x - read and execute only (staff, everyone)

# list running processes
ps -ef | grep bash # gives all bash processes running right now


